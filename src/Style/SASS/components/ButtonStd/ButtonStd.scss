//Feuille de style du composant "BouttonStd"

//Import de la charte de couleur
@import "../../../SASS/utils/colors-rule/colors-rule.scss";

//Import des mixins qui gerent le responsive
@import "../../utils/mixins/responsive/responsive.scss";

.button{
       
    &__std{
        padding: 1em;
        font-size: 1em;
        border: none;
        width: 90%;
        max-width: fit-content;
        transition: background-color 250ms linear;
        @include upper-large-screen{
            font-size: 1.2em;
        }
    }

    .first-bg{
        background-color: map-get($colors-rule, first-color);
        
         &:hover{
            background-color: darken(map-get($colors-rule, first-color), 10%);
        }
    }
    
    .second-bg{
        background-color: map-get($colors-rule, second-color);
         &:hover{
            background-color: darken(map-get($colors-rule, second-color), 10%);
        }
    }
    
    .third-bg{
        background-color: map-get($colors-rule, third-color);
         &:hover{
            background-color: darken(map-get($colors-rule, third-color), 10%);
        }
    }
    
    .fourth-bg{
        background-color: map-get($colors-rule, fourth-color);
         &:hover{
            background-color: darken(map-get($colors-rule, fourth-color), 10%);
        }
    }
    
    .fifth-bg{
        background-color: map-get($colors-rule, fifth-color);
         &:hover{
            background-color: darken(map-get($colors-rule, fifth-color), 10%);
        }
    }
    
    .first-text{
        color: map-get($colors-rule, first-color);
         
    }
    
    .second-text{
        color: map-get($colors-rule, second-color);
         
    }
    
    .third-text{
        color: map-get($colors-rule, third-color);
         
    }
    
    .fourth-text{
        color: map-get($colors-rule, fourth-color);
         
    }
    
    .fifth-text{
        color: map-get($colors-rule, fifth-color);
         
    }

    .disabled{
        opacity: 0.4;

         background-color: map-get($colors-rule, second-color);

         &:hover{
            background-color: map-get($colors-rule, second-color);
        }
    }
}